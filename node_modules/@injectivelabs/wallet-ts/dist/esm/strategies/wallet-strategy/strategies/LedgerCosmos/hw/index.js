import TransportWebUSB from '@ledgerhq/hw-transport-webusb';
import TransportWebHID from '@ledgerhq/hw-transport-webhid';
import CosmosApp from '@ledgerhq/hw-app-cosmos';
import { LedgerCosmosException } from '@injectivelabs/exceptions';
import AccountManager from './AccountManager.js';
export default class LedgerTransport {
    ledger = null;
    accountManager = null;
    static async getTransport() {
        try {
            if (await TransportWebHID.isSupported()) {
                return await TransportWebHID.create();
            }
            if (await TransportWebUSB.isSupported()) {
                return await TransportWebHID.create();
            }
        }
        catch (e) {
            throw new LedgerCosmosException(new Error(e.message));
        }
        return await TransportWebHID.create();
    }
    async getInstance() {
        if (!this.ledger) {
            this.ledger = new CosmosApp((await LedgerTransport.getTransport()));
        }
        return this.ledger;
    }
    async getAccountManager() {
        if (!this.accountManager) {
            this.accountManager = new AccountManager(await this.getInstance());
        }
        return this.accountManager;
    }
    async refresh() {
        if (!this.ledger) {
            return new LedgerTransport();
        }
        this.ledger.transport.close();
        return new LedgerTransport();
    }
}
//# sourceMappingURL=index.js.map