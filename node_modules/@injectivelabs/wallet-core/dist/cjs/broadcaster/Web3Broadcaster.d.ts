import { EthereumChainId } from '@injectivelabs/ts-types';
import { Network } from '@injectivelabs/networks';
import BaseWalletStrategy from '../strategy/BaseWalletStrategy.js';
interface SendTransactionOptions {
    tx: {
        from: string;
        to: string;
        gas: string;
        maxFeePerGas: string;
        maxPriorityFeePerGas: string | null;
        data: any;
    };
    address: string;
    ethereumChainId?: EthereumChainId;
}
/**
 * Preparing and broadcasting
 * Ethereum transactions
 */
export declare class Web3Broadcaster {
    private walletStrategy;
    private ethereumChainId;
    constructor({ walletStrategy, ethereumChainId, }: {
        walletStrategy: BaseWalletStrategy;
        ethereumChainId: EthereumChainId;
        network: Network;
    });
    sendTransaction(args: SendTransactionOptions): Promise<string>;
}
export {};
