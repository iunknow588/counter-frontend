"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ledgerhq_hw_transport_webusb_1 = require("@bangjelkoski/ledgerhq-hw-transport-webusb");
const ledgerhq_hw_transport_webhid_1 = require("@bangjelkoski/ledgerhq-hw-transport-webhid");
const ledgerhq_hw_app_cosmos_1 = require("@bangjelkoski/ledgerhq-hw-app-cosmos");
const exceptions_1 = require("@injectivelabs/exceptions");
const AccountManager_js_1 = __importDefault(require("./AccountManager.js"));
class LedgerTransport {
    ledger = null;
    accountManager = null;
    static async getTransport() {
        try {
            if (await ledgerhq_hw_transport_webhid_1.TransportWebHID.isSupported()) {
                return await ledgerhq_hw_transport_webhid_1.TransportWebHID.create();
            }
            if (await ledgerhq_hw_transport_webusb_1.TransportWebUSB.isSupported()) {
                return await ledgerhq_hw_transport_webhid_1.TransportWebHID.create();
            }
        }
        catch (e) {
            throw new exceptions_1.LedgerCosmosException(new Error(e.message));
        }
        return await ledgerhq_hw_transport_webhid_1.TransportWebHID.create();
    }
    async getInstance() {
        if (!this.ledger) {
            this.ledger = new ledgerhq_hw_app_cosmos_1.Cosmos((await LedgerTransport.getTransport()));
        }
        return this.ledger;
    }
    async getAccountManager() {
        if (!this.accountManager) {
            this.accountManager = new AccountManager_js_1.default(await this.getInstance());
        }
        return this.accountManager;
    }
    async refresh() {
        if (!this.ledger) {
            return new LedgerTransport();
        }
        this.ledger.transport.close();
        return new LedgerTransport();
    }
}
exports.default = LedgerTransport;
