"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "atomone.photon.v1";
function createBaseParams() {
    return { mintDisabled: false, txFeeExceptions: [] };
}
exports.Params = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.mintDisabled === true) {
            writer.uint32(8).bool(message.mintDisabled);
        }
        for (const v of message.txFeeExceptions) {
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.mintDisabled = reader.bool();
                    break;
                case 2:
                    message.txFeeExceptions.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            mintDisabled: isSet(object.mintDisabled)
                ? Boolean(object.mintDisabled)
                : false,
            txFeeExceptions: Array.isArray(object === null || object === void 0 ? void 0 : object.txFeeExceptions)
                ? object.txFeeExceptions.map((e) => String(e))
                : [],
        };
    },
    toJSON(message) {
        const obj = {};
        message.mintDisabled !== undefined &&
            (obj.mintDisabled = message.mintDisabled);
        if (message.txFeeExceptions) {
            obj.txFeeExceptions = message.txFeeExceptions.map((e) => e);
        }
        else {
            obj.txFeeExceptions = [];
        }
        return obj;
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseParams();
        message.mintDisabled = (_a = object.mintDisabled) !== null && _a !== void 0 ? _a : false;
        message.txFeeExceptions = ((_b = object.txFeeExceptions) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=photon.js.map