interface XOnlyPointAddTweakResult {
    parity: 1 | 0;
    xOnlyPubkey: Uint8Array;
}
export declare function isPoint(p: Uint8Array): boolean;
export declare function isPointCompressed(p: Uint8Array): boolean;
export declare function isPrivate(d: Uint8Array): boolean;
export declare function isXOnlyPoint(p: Uint8Array): boolean;
export declare function xOnlyPointAddTweak(p: Uint8Array, tweak: Uint8Array): XOnlyPointAddTweakResult | null;
export declare function pointFromScalar(sk: Uint8Array, compressed?: boolean): Uint8Array | null;
export declare function pointCompress(p: Uint8Array, compressed?: boolean): Uint8Array;
export declare function pointAddScalar(p: Uint8Array, tweak: Uint8Array, compressed?: boolean): Uint8Array | null;
export declare function privateAdd(d: Uint8Array, tweak: Uint8Array): Uint8Array | null;
export declare function privateNegate(d: Uint8Array): Uint8Array;
export declare function sign(h: Uint8Array, d: Uint8Array, e?: Uint8Array): Uint8Array;
export declare function signSchnorr(h: Uint8Array, d: Uint8Array, e?: Uint8Array): Uint8Array;
export declare function verify(h: Uint8Array, Q: Uint8Array, signature: Uint8Array, strict?: boolean): boolean;
export declare function verifySchnorr(h: Uint8Array, Q: Uint8Array, signature: Uint8Array): boolean;
export {};
