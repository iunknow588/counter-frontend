"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const _1 = require(".");
jest.mock("axios");
const mockedAxios = axios_1.default;
describe("fetcher", () => {
    afterEach(() => {
        jest.clearAllMocks();
    });
    it("should return data when fetched", async () => {
        const response = [{ myToken: { name: "myToken" } }];
        mockedAxios.get.mockImplementation(() => Promise.resolve({ data: response, headers: { etag: "hash" } }));
        const [tokens, hash] = await (0, _1.fetchTokensFromCDN)("tokens.json");
        expect(tokens).toBe(response);
        expect(hash).toBe("hash");
    });
    it("should throw error if fetch failed", async () => {
        mockedAxios.get.mockImplementation(() => Promise.reject({ message: "could not fetch" }));
        expect(async () => {
            await (0, _1.fetchTokensFromCDN)("tokens.json");
        }).rejects.toThrow();
    });
});
//# sourceMappingURL=fetch.test.js.map