"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.importEIP712v2 = exports.importEIP712 = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const fetch_1 = require("../../fetch");
const importEIP712 = async (outputDir) => {
    console.log("importing EIP712....");
    try {
        const [eip712, hash] = await (0, fetch_1.fetchTokensFromCDN)("eip712.json");
        if (eip712) {
            const filePath = path_1.default.join(outputDir, "eip712");
            fs_1.default.writeFileSync(`${filePath}.json`, JSON.stringify(eip712));
            if (hash) {
                fs_1.default.writeFileSync(`${filePath}-hash.json`, JSON.stringify(hash));
            }
            const tsContent = `import EIP712 from "./eip712.json";
${hash ? `export { default as hash } from "./eip712-hash.json";` : ""}
export default EIP712;
`;
            fs_1.default.writeFileSync(`${filePath}.ts`, tsContent);
            console.log("importing EIP712 sucess");
        }
    }
    catch (err) {
        console.error(err);
    }
};
exports.importEIP712 = importEIP712;
const importEIP712v2 = async (outputDir) => {
    console.log("importing EIP712 V2....");
    try {
        const [eip712, hash] = await (0, fetch_1.fetchTokensFromCDN)("eip712_v2.json");
        if (eip712) {
            const filePath = path_1.default.join(outputDir, "eip712_v2");
            fs_1.default.writeFileSync(`${filePath}.json`, JSON.stringify(eip712));
            if (hash) {
                fs_1.default.writeFileSync(`${filePath}-hash.json`, JSON.stringify(hash));
            }
            const tsContent = `import EIP712 from "./eip712_v2.json";
${hash ? `export { default as hash } from "./eip712_v2-hash.json";` : ""}
export default EIP712;
`;
            fs_1.default.writeFileSync(`${filePath}.ts`, tsContent);
            console.log("importing EIP712 V2 sucess");
        }
    }
    catch (err) {
        console.error(err);
    }
};
exports.importEIP712v2 = importEIP712v2;
//# sourceMappingURL=index.js.map