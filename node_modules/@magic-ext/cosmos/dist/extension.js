"use strict";var MagicCosmosExtension=(()=>{var f=Object.create;var c=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var x=(s,r)=>()=>(r||s((r={exports:{}}).exports,r),r.exports),j=(s,r)=>{for(var n in r)c(s,n,{get:r[n],enumerable:!0})},u=(s,r,n,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of l(r))!b.call(s,i)&&i!==n&&c(s,i,{get:()=>r[i],enumerable:!(e=T(r,i))||e.enumerable});return s};var q=(s,r,n)=>(n=s!=null?f(A(s)):{},u(r||!s||!s.__esModule?c(n,"default",{value:s,enumerable:!0}):n,s)),_=s=>u(c({},"__esModule",{value:!0}),s);var a=(s,r,n)=>new Promise((e,i)=>{var p=t=>{try{g(n.next(t))}catch(d){i(d)}},S=t=>{try{g(n.throw(t))}catch(d){i(d)}},g=t=>t.done?e(t.value):Promise.resolve(t.value).then(p,S);g((n=n.apply(s,r)).next())});var h=x((D,m)=>{m.exports=Magic});var B={};j(B,{default:()=>k});var y=q(h());var o=class extends y.Extension.Internal{constructor(n){super();this.cosmosConfig=n;this.name="cosmos";this.config={};this.signAndBroadcast=(n,e)=>a(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_signAndBroadcast",params:{message:n,fee:e}})});this.sign=(n,e)=>a(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_sign",params:{message:n,fee:e}})});this.signTypedData=n=>this.request({id:42,jsonrpc:"2.0",method:"cos_signTypedData",params:{message:n}});this.sendTokens=(n,e,i,p)=>a(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_sendTokens",params:{recipientAddress:n,transferAmount:e,denom:i,memo:p}})});this.changeAddress=n=>a(this,null,function*(){return this.request({id:41,jsonrpc:"2.0",method:"cos_changeAddress",params:{prefix:n}})});this.config={rpcUrl:n.rpcUrl,chainType:"COSMOS",options:{chain:n.chain}}}};var k=o;return _(B);})();
if (MagicCosmosExtension && MagicCosmosExtension.default != null) { MagicCosmosExtension = Object.assign(MagicCosmosExtension.default, MagicCosmosExtension); delete MagicCosmosExtension.default; }
