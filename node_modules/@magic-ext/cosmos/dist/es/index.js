var e=(p,o,n)=>new Promise((s,i)=>{var t=r=>{try{a(n.next(r))}catch(c){i(c)}},d=r=>{try{a(n.throw(r))}catch(c){i(c)}},a=r=>r.done?s(r.value):Promise.resolve(r.value).then(t,d);a((n=n.apply(p,o)).next())});import{Extension as u}from"@magic-sdk/commons";var g=class extends u.Internal{constructor(n){super();this.cosmosConfig=n;this.name="cosmos";this.config={};this.signAndBroadcast=(n,s)=>e(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_signAndBroadcast",params:{message:n,fee:s}})});this.sign=(n,s)=>e(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_sign",params:{message:n,fee:s}})});this.signTypedData=n=>this.request({id:42,jsonrpc:"2.0",method:"cos_signTypedData",params:{message:n}});this.sendTokens=(n,s,i,t)=>e(this,null,function*(){return this.request({id:42,jsonrpc:"2.0",method:"cos_sendTokens",params:{recipientAddress:n,transferAmount:s,denom:i,memo:t}})});this.changeAddress=n=>e(this,null,function*(){return this.request({id:41,jsonrpc:"2.0",method:"cos_changeAddress",params:{prefix:n}})});this.config={rpcUrl:n.rpcUrl,chainType:"COSMOS",options:{chain:n.chain}}}};export{g as CosmosExtension};
//# sourceMappingURL=index.js.map
