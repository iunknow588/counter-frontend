{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["import { Extension } from '@magic-sdk/commons';\nimport { CosmosConfig, CosmosPayloadMethod } from './type';\n\nexport class CosmosExtension extends Extension.Internal<'cosmos', any> {\n  name = 'cosmos' as const;\n  config: any = {};\n\n  constructor(public cosmosConfig: CosmosConfig) {\n    super();\n\n    this.config = {\n      rpcUrl: cosmosConfig.rpcUrl,\n      chainType: 'COSMOS',\n      options: {\n        chain: cosmosConfig.chain,\n      },\n    };\n  }\n\n  public signAndBroadcast = async (message: any, fee: any) => {\n    return this.request({\n      id: 42,\n      jsonrpc: '2.0',\n      method: CosmosPayloadMethod.SignAndBroadcast,\n      params: { message, fee },\n    });\n  };\n\n  public sign = async (message: any, fee: any) => {\n    return this.request({\n      id: 42,\n      jsonrpc: '2.0',\n      method: CosmosPayloadMethod.Sign,\n      params: { message, fee },\n    });\n  };\n\n  public signTypedData = (message: string) => {\n    return this.request({\n      id: 42,\n      jsonrpc: '2.0',\n      method: CosmosPayloadMethod.SignTypedData,\n      params: { message },\n    });\n  };\n\n  public sendTokens = async (\n    recipientAddress: string,\n    transferAmount: string | number,\n    denom: string,\n    memo?: string,\n  ) => {\n    return this.request({\n      id: 42,\n      jsonrpc: '2.0',\n      method: CosmosPayloadMethod.SendTokens,\n      params: { recipientAddress, transferAmount, denom, memo },\n    });\n  };\n\n  public changeAddress = async (prefix: string) => {\n    return this.request({\n      id: 41,\n      jsonrpc: '2.0',\n      method: CosmosPayloadMethod.ChangeAddress,\n      params: { prefix },\n    });\n  };\n}\n"],
  "mappings": "snBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA0B,8BAGnB,IAAMC,EAAN,cAA8B,YAAU,QAAwB,CAIrE,YAAmBC,EAA4B,CAC7C,MAAM,EADW,kBAAAA,EAHnB,UAAO,SACP,YAAc,CAAC,EAcf,KAAO,iBAAmB,CAAOC,EAAcC,IAAaC,EAAA,sBAC1D,OAAO,KAAK,QAAQ,CAClB,GAAI,GACJ,QAAS,MACT,8BACA,OAAQ,CAAE,QAAAF,EAAS,IAAAC,CAAI,CACzB,CAAC,CACH,GAEA,KAAO,KAAO,CAAOD,EAAcC,IAAaC,EAAA,sBAC9C,OAAO,KAAK,QAAQ,CAClB,GAAI,GACJ,QAAS,MACT,kBACA,OAAQ,CAAE,QAAAF,EAAS,IAAAC,CAAI,CACzB,CAAC,CACH,GAEA,KAAO,cAAiBD,GACf,KAAK,QAAQ,CAClB,GAAI,GACJ,QAAS,MACT,2BACA,OAAQ,CAAE,QAAAA,CAAQ,CACpB,CAAC,EAGH,KAAO,WAAa,CAClBG,EACAC,EACAC,EACAC,IACGJ,EAAA,sBACH,OAAO,KAAK,QAAQ,CAClB,GAAI,GACJ,QAAS,MACT,wBACA,OAAQ,CAAE,iBAAAC,EAAkB,eAAAC,EAAgB,MAAAC,EAAO,KAAAC,CAAK,CAC1D,CAAC,CACH,GAEA,KAAO,cAAuBC,GAAmBL,EAAA,sBAC/C,OAAO,KAAK,QAAQ,CAClB,GAAI,GACJ,QAAS,MACT,2BACA,OAAQ,CAAE,OAAAK,CAAO,CACnB,CAAC,CACH,GAzDE,KAAK,OAAS,CACZ,OAAQR,EAAa,OACrB,UAAW,SACX,QAAS,CACP,MAAOA,EAAa,KACtB,CACF,CACF,CAmDF",
  "names": ["src_exports", "__export", "CosmosExtension", "__toCommonJS", "import_commons", "CosmosExtension", "cosmosConfig", "message", "fee", "__async", "recipientAddress", "transferAmount", "denom", "memo", "prefix"]
}
