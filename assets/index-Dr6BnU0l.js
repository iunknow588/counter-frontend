import{D as e,E as t,F as n,G as i,H as c,K as E,J as d,L as u,M as l,N as b,O as p,P as T,Q as g,R as m,T as h,V as y,bl as v,ad as S,ae as A,a2 as F,aa as I,a3 as R,af as C,X as f,a4 as N,ag as x,aF as B,aG as D,aH as P,C as U,aI as H,a5 as w,a6 as z,a7 as L,a9 as M,Y as k,Z as q,ah as V,ab as O,aQ as G,aR as W,aP as j,aS as K,aT as Z,aU as J,aV as Q,b8 as X,b3 as Y,b4 as _,aW as $,aL as aa,ai as ra,aX as sa,aY as oa,_ as ea,$ as ta,I as na,a as ia,b7 as ca,a0 as Ea,aK as da,aJ as ua,a1 as la,bn as ba,b as pa,aM as Ta,aN as ga,aj as ma,b9 as ha,c as ya,d as va,ak as Sa,e as Aa,bo as Fa,al as Ia,ba as Ra,bb as Ca,bc as fa,f as Na,bd as xa,g as Ba,bp as Da,am as Pa,an as Ua,ac as Ha,ao as wa,ap as za,aZ as La,a_ as Ma,a$ as ka,aq as qa,ar as Va,as as Oa,a8 as Ga,at as Wa,au as ja,av as Ka,b5 as Za,bi as Ja,aO as Qa,bj as Xa,S as Ya,bm as _a,aw as $a,b6 as ar,b0 as rr,be as sr,bf as or,bg as er,ax as tr,b1 as nr,ay as ir,az as cr,b2 as Er,aA as dr,h as ur,U as lr,aB as br,aC as pr,aD as Tr,bk as gr,aE as mr,W as hr,bh as yr,cn as vr,bY as Sr,bZ as Ar,b_ as Fr,b$ as Ir,ce as Rr,ch as Cr,c0 as fr,c5 as Nr,ca as xr,cb as Br,c6 as Dr,cc as Pr,cd as Ur,cz as Hr,cf as wr,cg as zr,ck as Lr,cl as Mr,cm as kr,j as qr,l as Vr,n as Or,o as Gr,bu as Wr,bv as jr,bw as Kr,bx as Zr,by as Jr,s as Qr,t as Xr,bz as Yr,bA as _r,bB as $r,bC as as,bD as rs,bF as ss,r as os,x as es,bs as ts,cs as ns,ct as is,bt as cs,bH as Es,bJ as ds,bK as us,cu as ls,cy as bs,bM as ps,cA as Ts,co as gs,cB as ms,cC as hs,cE as ys,cD as vs,cE as Ss,bN as As,bO as Fs,d0 as Is,y as Rs,bP as Cs,cG as fs,bQ as Ns,bR as xs,cv as Bs,cw as Ds,c1 as Ps,cx as Us,k as Hs,cI as ws,cJ as zs,bW as Ls,cK as Ms,cL as ks,cM as qs,bq as Vs,A as Os,q as Gs,br as Ws,c2 as js,c7 as Ks,cO as Zs,cP as Js,cQ as Qs,p as Xs,i as Ys,bG as _s,cR as $s,bE as ao,B as ro,m as so,bS as oo,bT as eo,bL as to,cS as no,bX as io,bU as co,cT as Eo,c_ as uo,cN as lo,bU as bo,cU as po,cV as To,cW as go,cX as mo,c3 as ho,c8 as yo,cY as vo,ci as So,cj as Ao,c4 as Fo,cF as Io,cC as Ro,cE as Co,cF as fo,cD as No,cE as xo,c9 as Bo,cH as Do,bV as Po,bI as Uo,cZ as Ho,u as wo,v as zo,c$ as Lo,w as Mo,cp as ko,cq as qo,cr as Vo,z as Oo}from"./index-BKadGfq_.js";import{ccipRequest as Wo,ccipRequest as jo,offchainLookup as Ko,offchainLookupAbiItem as Zo,offchainLookupSignature as Jo}from"./ccip-Dgctl_g7.js";import"@magic-sdk/provider";import"@magic-sdk/types";export{e as AbiConstructorNotFoundError,t as AbiConstructorParamsNotFoundError,n as AbiDecodingDataSizeTooSmallError,i as AbiDecodingZeroDataError,c as AbiEncodingArrayLengthMismatchError,E as AbiEncodingBytesSizeMismatchError,d as AbiEncodingLengthMismatchError,u as AbiErrorInputsNotFoundError,l as AbiErrorNotFoundError,b as AbiErrorSignatureNotFoundError,p as AbiEventNotFoundError,T as AbiEventSignatureEmptyTopicsError,g as AbiEventSignatureNotFoundError,m as AbiFunctionNotFoundError,h as AbiFunctionOutputsNotFoundError,y as AbiFunctionSignatureNotFoundError,v as AccountStateConflictError,S as AtomicReadyWalletRejectedUpgradeError,A as AtomicityNotSupportedError,F as BaseError,I as BaseFeeScalarError,R as BlockNotFoundError,C as BundleTooLargeError,f as BytesSizeMismatchError,N as CallExecutionError,x as ChainDisconnectedError,B as ChainDoesNotSupportContract,D as ChainMismatchError,P as ChainNotFoundError,U as CircularReferenceError,H as ClientChainNotConfiguredError,w as ContractFunctionExecutionError,z as ContractFunctionRevertedError,L as ContractFunctionZeroDataError,M as CounterfactualDeploymentFailedError,k as DecodeLogDataMismatch,q as DecodeLogTopicsMismatch,V as DuplicateIdError,O as Eip1559FeesNotSupportedError,G as EnsAvatarInvalidNftUriError,W as EnsAvatarUnsupportedNamespaceError,j as EnsAvatarUriResolutionError,K as EstimateGasExecutionError,Z as ExecutionRevertedError,J as FeeCapTooHighError,Q as FeeCapTooLowError,X as FeeConflictError,Y as FilterTypeNotSupportedError,_ as HttpRequestError,$ as InsufficientFundsError,aa as IntegerOutOfRangeError,ra as InternalRpcError,sa as IntrinsicGasTooHighError,oa as IntrinsicGasTooLowError,ea as InvalidAbiDecodingTypeError,ta as InvalidAbiEncodingTypeError,na as InvalidAbiItemError,ia as InvalidAbiTypeParameterError,ca as InvalidAddressError,Ea as InvalidArrayError,da as InvalidBytesBooleanError,ua as InvalidChainIdError,la as InvalidDefinitionTypeError,ba as InvalidDomainError,pa as InvalidFunctionModifierError,Ta as InvalidHexBooleanError,ga as InvalidHexValueError,ma as InvalidInputRpcError,ha as InvalidLegacyVError,ya as InvalidModifierError,va as InvalidParameterError,Sa as InvalidParamsRpcError,Aa as InvalidParenthesisError,Fa as InvalidPrimaryTypeError,Ia as InvalidRequestRpcError,Ra as InvalidSerializableTransactionError,Ca as InvalidSerializedTransactionError,fa as InvalidSerializedTransactionTypeError,Na as InvalidSignatureError,xa as InvalidStorageKeySizeError,Ba as InvalidStructSignatureError,Da as InvalidStructTypeError,Pa as JsonRpcVersionUnsupportedError,Ua as LimitExceededRpcError,Ha as MaxFeePerGasTooLowError,wa as MethodNotFoundRpcError,za as MethodNotSupportedRpcError,La as NonceMaxValueError,Ma as NonceTooHighError,ka as NonceTooLowError,qa as ParseRpcError,Va as ProviderDisconnectedError,Oa as ProviderRpcError,Ga as RawContractError,Wa as ResourceNotFoundRpcError,ja as ResourceUnavailableRpcError,Ka as RpcError,Za as RpcRequestError,Ja as SizeExceedsPaddingSizeError,Qa as SizeOverflowError,Xa as SliceOffsetOutOfBoundsError,Ya as SolidityProtectedKeywordError,_a as StateAssignmentConflictError,$a as SwitchChainError,ar as TimeoutError,rr as TipAboveFeeCapError,sr as TransactionExecutionError,or as TransactionNotFoundError,er as TransactionReceiptNotFoundError,tr as TransactionRejectedRpcError,nr as TransactionTypeNotSupportedError,ir as UnauthorizedProviderError,cr as UnknownBundleIdError,Er as UnknownNodeError,dr as UnknownRpcError,ur as UnknownSignatureError,lr as UnknownTypeError,br as UnsupportedChainIdError,pr as UnsupportedNonOptionalCapabilityError,Tr as UnsupportedProviderMethodError,gr as UrlRequiredError,mr as UserRejectedRequestError,hr as WaitForCallsStatusTimeoutError,yr as WaitForTransactionReceiptTimeoutError,vr as assertCurrentChain,Sr as assertRequest,Ar as assertTransactionEIP1559,Fr as assertTransactionEIP2930,Ir as assertTransactionLegacy,Rr as blobsToCommitments,Cr as blobsToProofs,fr as boolToBytes,Nr as boolToHex,xr as bytesToBigInt,Br as bytesToBool,Dr as bytesToHex,Pr as bytesToNumber,Ur as bytesToString,Wo as ccipFetch,jo as ccipRequest,Hr as checksumAddress,wr as commitmentToVersionedHash,zr as commitmentsToVersionedHashes,Lr as concat,Mr as concatBytes,kr as concatHex,qr as createClient,Vr as createPublicClient,Or as createTransport,Gr as createWalletClient,Wr as decodeAbiParameters,jr as decodeErrorResult,Kr as decodeEventLog,Zr as decodeFunctionData,Jr as decodeFunctionResult,Qr as deploylessCallViaBytecodeBytecode,Xr as deploylessCallViaFactoryBytecode,Yr as encodeAbiParameters,_r as encodeDeployData,$r as encodeErrorResult,as as encodeEventTopics,rs as encodeFunctionData,ss as encodeFunctionResult,os as ethAddress,es as etherUnits,ts as formatBlock,ns as formatEther,is as formatGwei,cs as formatLog,Es as formatTransaction,ds as formatTransactionReceipt,us as formatTransactionRequest,ls as formatUnits,bs as fromRlp,ps as getAbiItem,Ts as getAddress,gs as getChainContractAddress,ms as getContractError,hs as getEventSelector,ys as getEventSignature,vs as getFunctionSelector,Ss as getFunctionSignature,As as getSerializedTransactionType,Fs as getTransactionType,Is as getTypesForEIP712Domain,Rs as gweiUnits,Cs as hashDomain,fs as hashMessage,Ns as hashStruct,xs as hashTypedData,Bs as hexToBigInt,Ds as hexToBool,Ps as hexToBytes,Us as hexToNumber,Hs as http,ws as isAddress,zs as isAddressEqual,Ls as isErc6492Signature,Ms as isHash,ks as isHex,qs as keccak256,Vs as labelhash,Os as maxUint256,Gs as multicall3Abi,Ws as namehash,js as numberToBytes,Ks as numberToHex,Ko as offchainLookup,Zo as offchainLookupAbiItem,Jo as offchainLookupSignature,Zs as pad,Js as padBytes,Qs as padHex,Xs as parseAbi,Ys as parseAbiItem,_s as parseEventLogs,$s as parseTransaction,ao as prepareEncodeFunctionData,ro as presignMessagePrefix,so as publicActions,oo as recoverAddress,eo as recoverPublicKey,to as rpcTransactionType,no as serializeAccessList,io as serializeErc6492Signature,co as serializeSignature,Eo as serializeTransaction,uo as serializeTypedData,lo as sha256,bo as signatureToHex,po as size,To as slice,go as sliceBytes,mo as sliceHex,ho as stringToBytes,yo as stringToHex,vo as stringify,So as toBlobSidecars,Ao as toBlobs,Fo as toBytes,Io as toEventHash,Ro as toEventSelector,Co as toEventSignature,fo as toFunctionHash,No as toFunctionSelector,xo as toFunctionSignature,Bo as toHex,Do as toPrefixedMessage,Po as toRlp,Uo as transactionType,Ho as trim,wo as universalSignatureValidatorAbi,zo as universalSignatureValidatorByteCode,Lo as validateTypedData,Mo as walletActions,ko as withCache,qo as withRetry,Vo as withTimeout,Oo as zeroAddress};
